							ASSIGNMENT-3
							============


					==========**%%__JAVA__NAMING__CONVENTIONS__%%**==========


WHAT IS NAMING CONVENTONS IN JAVA ??


Java naming convention is a rule to follow as you decide what to name your identifiers 
such as class, package, variable, constant, method, etc.
But, it is not forced to follow. So, it is known as convention not rule.
These conventions are suggested by several Java communities such as Sun Microsystems and Netscape.
All the classes, interfaces, packages, methods and fields of Java programming language are given according to the Java naming convention.
If you fail to follow these conventions, it may generate confusion or error in code.


***Advantage of naming conventions in java****
================================================

By using standard Java naming conventions, the code made easy to read for yourself and other programmers. 
Readability of Java program is very important. 
It indicates that less time is spent to figure out what the code does.


key rules:-
=========
-----------------------------------------------

1.The name must not contain any white spaces.

-----------------------------------------------------

2.The name should not start with special characters like & (ampersand), $ (dollar), _ (underscore).

----------------------------------------------------------------------------------------------------
3.Class

-It should start with the uppercase letter.
-It should be a noun such as Color, Button, System, Thread, etc.
-Use appropriate words, instead of acronyms.
-Example: -
	public class Person  
	{  
	//code snippet  
	}
---------------------------------------------------------------------------------------------  
4.Interface

-It should start with the uppercase letter.
-It should be an adjective such as Runnable, Remote, ActionListener.
-Use appropriate words, instead of acronyms.
-Example: -
	interface Color  
	{  
	//code snippet  
	}  
------------------------------------------------------------------------------------------------
5.Method

-It should start with lowercase letter.
-It should be a verb such as main(), print(), println().
-If the name contains multiple words, start it with a lowercase letter followed by
 an uppercase letter such as actionPerformed().
-Example:-
 	class Student  
	{  
	//method  
	void draw()  
	{  
	//code snippet  
	}  
	}  
----------------------------------------------------------------------------------

5.Variable

-It should start with a lowercase letter such as id, name.
-It should not start with the special characters like & (ampersand), $ (dollar), _ (underscore).
-If the name contains multiple words, start it with the lowercase letter followed by an uppercase letter such as firstName, lastName.
-Avoid using one-character variables such as x, y, z.
-Example :-
 	 class Employee  
	{  
	//variable  
	int id;  
	//code snippet  

	}  

--------------------------------------------------------------------------------------------
6.Package

-It should be a lowercase letter such as java, lang.
-If the name contains multiple words, it should be separated by dots (.) such as java.util, java.lang.
-Example :-
	package com.java1; //package  
	class Student  
	{  
	//code snippet  
	}  

-------------------------------------------------------------------------------------------------------------
7.Constant

-It should be in uppercase letters such as RED, YELLOW.
-If the name contains multiple words, it should be separated by an underscore(_) such as MAX_PRIORITY.
-It may contain digits but not as the first letter.
-Example :-
	class Employee  
	{  
	//constant  
 	static final int MIN_AGE = 18;  
	//code snippet  
	}  


